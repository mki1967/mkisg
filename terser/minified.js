var sbx_makeShaderProgramTool=function(gl,vertexShaderSource,fragmentShaderSource){var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertexShaderSource);gl.compileShader(vertexShader);if(!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)){console.log(gl.getShaderInfoLog(vertexShader));console.log(vertexShaderSource);return null}var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragmentShaderSource);gl.compileShader(fragmentShader);if(!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)){console.log(gl.getShaderInfoLog(fragmentShader));console.log(fragmentShaderSource);return null}var shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertexShader);gl.attachShader(shaderProgram,fragmentShader);gl.linkProgram(shaderProgram);if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)){console.log("Could not initialise shaders");return null}return shaderProgram};const sbx_CUBE_SIZE=512;var sbx_srcCubeSize="const int cubeSize= "+sbx_CUBE_SIZE+";\n";var sbx_srcPI="const float PI = "+Math.PI+";\n";var sbx_srcFunRPrefix="float fR(float x,float y,float z){ return ";var sbx_srcFunGPrefix="float fG(float x,float y,float z){ return ";var sbx_srcFunBPrefix="float fB(float x,float y,float z){ return ";var sbr_srcFunSuffix="; }\n";var sbx_srcFunStrings=[" x"," y"," z"," sin( x * PI * 2.0 )"," sin( z * PI * 2.0 )"," sin( y * PI * 2.0 )"," sin( (x+y) * PI * 2.0 )"," sin( (y+z) * PI * 2.0 )"," sin( (z+x) * PI * 2.0 )"," cos( x * PI * 2.0 )"," cos( z * PI * 2.0 )"," cos( y * PI * 2.0 )"," sin( x * PI * 2.0 )*cos( y * PI * 2.0 )"," sin( x * PI * 2.0 )*cos( z * PI * 2.0 )"," sin( x * PI * 4.0 )"," sin( z * PI * 4.0 )"," sin( y * PI * 4.0 )"," cos( x * PI * 4.0 )"," cos( z * PI * 4.0 )"," cos( y * PI * 4.0 )"," sin( x * PI * 4.0 )*cos( y * PI * 4.0 )"," sin( x * PI * 4.0 )*cos( z * PI * 4.0 )"];var sbx_renderTextureVS=function(){return""+"attribute vec2 vIn;\n"+"const float depth=1.0;\n"+"uniform mat3 xyz;\n"+"varying vec4 color;\n"+"varying vec3 vxyz;\n"+"void main()\n"+"{\n"+"  vec3 xyd= vec3(vIn, depth);\n"+"  vxyz=xyz*xyd;\n"+"  gl_Position = vec4( vIn.x, vIn.y, 0.0, 1.0 );\n"+"}\n"};var sbx_renderTextureFS=function(r,g,b){return""+"precision mediump float;\n"+"const float PI = "+Math.PI+";\n"+r+g+b+"varying vec3 vxyz;\n"+"varying vec4 color;\n"+"void main()\n"+"{\n"+"  vec3 v=normalize( vxyz);\n"+"  float x= v.x;\n"+"  float y= v.y;\n"+"  float z= v.z;\n"+"  gl_FragColor= 0.5*vec4( fR(x,y,z), fG(x,y,z), fB(x,y,z), 0.5 )+vec4(0.5,0.5,0.5,0.5);\n"+"}\n"};var sbx_renderTextureShaderProgram=null;var sbx_hBufferId=null;var sbx_vInLocation;var sbx_xyzLocation;var sbx_makeRenderTextureShaderProgram=function(gl){var fun=sbx_srcFunStrings;var r=Math.floor(Math.random()*fun.length);var g=Math.floor(Math.random()*fun.length);var b=Math.floor(Math.random()*fun.length);var sbx_srcFunR=sbx_srcFunRPrefix+sbx_srcFunStrings[r]+sbr_srcFunSuffix;var sbx_srcFunG=sbx_srcFunGPrefix+sbx_srcFunStrings[g]+sbr_srcFunSuffix;var sbx_srcFunB=sbx_srcFunBPrefix+sbx_srcFunStrings[b]+sbr_srcFunSuffix;if(sbx_renderTextureShaderProgram)gl.deleteProgram(sbx_renderTextureShaderProgram);sbx_renderTextureShaderProgram=sbx_makeShaderProgramTool(gl,sbx_renderTextureVS(),sbx_renderTextureFS(sbx_srcFunR,sbx_srcFunG,sbx_srcFunB));sbx_vInLocation=gl.getAttribLocation(sbx_renderTextureShaderProgram,"vIn");sbx_xyzLocation=gl.getUniformLocation(sbx_renderTextureShaderProgram,"xyz");if(sbx_hBufferId===null){sbx_hBufferId=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,sbx_hBufferId);var hIn=[-1,-1,-1,1,1,1,1,-1];gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(hIn),gl.STATIC_DRAW)}let err=gl.getError();if(err!=gl.NO_ERROR)sbx_Disable(err)};function sbx_Disable(err){console.log("Disabling skybox to to GL ERROR: "+err);sbx_makeShaderProgram=sbx_renderRandomCube=sbx_makeRenderTextureShaderProgram=sbx_makeShaderProgramTool=sbx_drawSkybox=function(){}}var sbx_textureId=null;var sbx_textureUnit=0;var sbx_frameBufferId=null;var sbx_xyzXPlus=[0,0,-1,0,1,0,1,0,0];var sbx_xyzXMinus=[0,0,1,0,1,0,-1,0,0];var sbx_xyzYPlus=[1,0,0,0,0,1,0,-1,0];var sbx_xyzYMinus=[1,0,0,0,0,-1,0,1,0];var sbx_xyzZPlus=[1,0,0,0,1,0,0,0,1];var sbx_xyzZMinus=[-1,0,0,0,1,0,0,0,-1];var sbx_xyzArray=[sbx_xyzXPlus,sbx_xyzXMinus,sbx_xyzYPlus,sbx_xyzYMinus,sbx_xyzZPlus,sbx_xyzZMinus];var sbx_renderRandomCube=function(gl){var i,j;var defaultFBO=gl.getParameter(gl.FRAMEBUFFER_BINDING);var hth=gl.viewportHeight;var wth=gl.viewportWidth;if(sbx_textureId===null){sbx_textureId=gl.createTexture();gl.activeTexture(gl.TEXTURE0+sbx_textureUnit);gl.bindTexture(gl.TEXTURE_CUBE_MAP,sbx_textureId);for(i=0;i<6;i++)gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,gl.RGBA,sbx_CUBE_SIZE,sbx_CUBE_SIZE,0,gl.RGBA,gl.UNSIGNED_BYTE,null);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_MIN_FILTER,gl.LINEAR_MIPMAP_LINEAR);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE)}if(sbx_frameBufferId===null){sbx_frameBufferId=gl.createFramebuffer()}if(sbx_renderTextureShaderProgram!=null)gl.deleteProgram(sbx_renderTextureShaderProgram);sbx_makeRenderTextureShaderProgram(gl);gl.useProgram(sbx_renderTextureShaderProgram);gl.activeTexture(gl.TEXTURE0+sbx_textureUnit);gl.bindTexture(gl.TEXTURE_CUBE_MAP,sbx_textureId);gl.bindFramebuffer(gl.FRAMEBUFFER,sbx_frameBufferId);gl.viewport(0,0,sbx_CUBE_SIZE,sbx_CUBE_SIZE);gl.enableVertexAttribArray(sbx_vInLocation);for(i=0;i<6;i++){gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_CUBE_MAP_POSITIVE_X+i,sbx_textureId,0);gl.uniformMatrix3fv(sbx_xyzLocation,gl.FALSE,sbx_xyzArray[i]);gl.bindBuffer(gl.ARRAY_BUFFER,sbx_hBufferId);gl.vertexAttribPointer(sbx_vInLocation,2,gl.FLOAT,false,0,0);gl.drawArrays(gl.TRIANGLE_FAN,0,4)}gl.disableVertexAttribArray(sbx_vInLocation);gl.generateMipmap(gl.TEXTURE_CUBE_MAP);gl.bindFramebuffer(gl.FRAMEBUFFER,defaultFBO);gl.viewportWidth=wth;gl.viewportHeight=hth;gl.viewport(0,0,wth,hth)};var sbx_loadCubeFaceFromCanvas=function(gl,canvas,cubeFace){gl.activeTexture(gl.TEXTURE0+sbx_textureUnit);gl.bindTexture(gl.TEXTURE_CUBE_MAP,sbx_textureId);gl.texImage2D(cubeFace,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,canvas)};var sbx_vertexShaderSource=""+"attribute vec3 position;\n"+"varying vec3 TexCoords;\n"+"uniform mat4 projection;\n"+"uniform mat4 view;\n"+"void main()\n"+"{\n"+"    vec4 pos = projection * view * vec4(position, 1.0);\n"+"    gl_Position = pos.xyww;\n"+"    TexCoords = position;\n"+"}\n";var sbx_fragmentShaderSource=""+"precision mediump float;\n"+"varying vec3 TexCoords;\n"+"uniform samplerCube skybox;\n"+"void main()\n"+"{\n"+"    gl_FragColor = textureCube(skybox, TexCoords);\n"+"}\n";var sbx_vertexShader=null;var sbx_fragmentShader=null;var sbx_shaderProgram=null;var sbx_position=null;var sbx_projection=null;var sbx_view=null;var sbx_skybox=null;var sbx_Float32Array=new Float32Array([-1,1,-1,-1,-1,-1,+1,-1,-1,+1,-1,-1,+1,1,-1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,+1,-1,-1,+1,-1,1,+1,1,1,+1,1,1,+1,1,-1,+1,-1,-1,-1,-1,1,-1,1,1,+1,1,1,+1,1,1,+1,-1,1,-1,-1,1,-1,1,-1,+1,1,-1,+1,1,1,+1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,+1,-1,-1,+1,-1,-1,-1,-1,1,+1,-1,1]);var sbx_arrayBuffer=null;function sbx_makeShaderProgram(gl){sbx_shaderProgram=sbx_makeShaderProgramTool(gl,sbx_vertexShaderSource,sbx_fragmentShaderSource);gl.useProgram(sbx_shaderProgram);sbx_position=gl.getAttribLocation(sbx_shaderProgram,"position");sbx_projection=gl.getUniformLocation(sbx_shaderProgram,"projection");sbx_view=gl.getUniformLocation(sbx_shaderProgram,"view");sbx_skybox=gl.getUniformLocation(sbx_shaderProgram,"skybox");sbx_arrayBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,sbx_arrayBuffer);gl.bufferData(gl.ARRAY_BUFFER,sbx_Float32Array,gl.STATIC_DRAW);return sbx_shaderProgram}var sbx_drawSkybox=function(gl,view,projection){gl.depthFunc(gl.LEQUAL);gl.useProgram(sbx_shaderProgram);gl.uniformMatrix4fv(sbx_view,false,view);gl.uniformMatrix4fv(sbx_projection,false,projection);gl.enableVertexAttribArray(sbx_position);gl.bindBuffer(gl.ARRAY_BUFFER,sbx_arrayBuffer);gl.vertexAttribPointer(sbx_position,3,gl.FLOAT,false,0,0);gl.activeTexture(gl.TEXTURE0+sbx_textureUnit);gl.bindTexture(gl.TEXTURE_CUBE_MAP,sbx_textureId);gl.uniform1i(sbx_skybox,sbx_textureUnit);gl.bindTexture(gl.TEXTURE_CUBE_MAP,sbx_textureId);gl.drawArrays(gl.TRIANGLES,0,36);gl.disableVertexAttribArray(sbx_position);gl.depthFunc(gl.LESS)};var VERTEX_SHADER_STRING=" attribute vec3 aVertexPosition; attribute vec4 aVertexColor; uniform mat4 uMVMatrix; uniform mat4 uPMatrix; uniform vec3 mov; uniform mat3 rot; varying vec4 vColor; void main(void) { gl_Position = uPMatrix * uMVMatrix * vec4(mov+rot*aVertexPosition, 1.0); vColor = aVertexColor; }";var FRAGMENT_SHADER_STRING=" precision mediump float; varying vec4 vColor; void main(void) { gl_FragColor = vColor; }";var shaderProgram;var vertexPositionSize=3;var vertexColorSize=3;var mvMatrix;var pMatrix;var mov;var rot;var travMatrices;var gl;var scene={};var token={};var linkSymbol={};var traveler={};var bgColor=[0,0,0];var frameBox={};var projection={};projection.zNear=.25;projection.zFar=300;projection.zoomY=2.5;projection.screenX=640;projection.screenY=400;var rotXZStep=2.5;var rotYZStep=2.5;var maxYZAngle=90;var moveStep=.5;var XMargin=30;var YMargin=30;var ZMargin=30;var linkInDistance=1;var linkOutDistance=6;var startTime;var canvas;var canvasTex;var canvasTexDiv;var sectors;var buffersScene={};var buffersToken={};var buffersLinkSymbol={};var buffersFrameBox={};var arrayOfStages;var stageIndex=0;var arrayOfTokens;var MAX_TOKENS=10;var tokenPositions=[];var animation={};animation.requestId=0;animation.startTime=0;animation.lastTime=0;animation.deltaTime=0;animation.initialSpeed=.001;animation.maxSpeed=.06;animation.acceleration=15e-6;animation.movSpeed=animation.initialSpeed;animation.speedUpdate=function(){animation.movSpeed=Math.min(animation.maxSpeed,animation.movSpeed+animation.deltaTime*animation.acceleration)};animation.rotSpeed=.08;var mu=animation.movUp=function(){var step=animation.movSpeed*animation.deltaTime;move(traveler,[0,step,0]);animation.speedUpdate()};var md=animation.movDown=function(){var step=animation.movSpeed*animation.deltaTime;move(traveler,[0,-step,0]);animation.speedUpdate()};var ml=animation.movLeft=function(){var step=animation.movSpeed*animation.deltaTime;move(traveler,[-step,0,0]);animation.speedUpdate()};var mr=animation.movRight=function(){var step=animation.movSpeed*animation.deltaTime;move(traveler,[step,0,0]);animation.speedUpdate()};var mf=animation.movForward=function(){var step=animation.movSpeed*animation.deltaTime;move(traveler,[0,0,step]);animation.speedUpdate()};var mb=animation.movBack=function(){var step=animation.movSpeed*animation.deltaTime;move(traveler,[0,0,-step]);animation.speedUpdate()};var ru=animation.rotUp=function(){var step=animation.rotSpeed*animation.deltaTime;rotateYZ(traveler,-step)};var rd=animation.rotDown=function(){var step=animation.rotSpeed*animation.deltaTime;rotateYZ(traveler,step)};var rl=animation.rotLeft=function(){var step=animation.rotSpeed*animation.deltaTime;rotateXZ(traveler,step);animation.totalRotXZ+=step;if(Math.abs(animation.totalRotXZ)>=360)animation.stop()};var rr=animation.rotRight=function(){var step=animation.rotSpeed*animation.deltaTime;rotateXZ(traveler,-step);animation.totalRotXZ+=step;if(Math.abs(animation.totalRotXZ)>=360)animation.stop()};var secretTaps=0;var lv=function(){if(traveler.rotYZ==0){old=traveler.rotXZ;traveler.rotXZ=nearestRightAngle(traveler.rotXZ);if(traveler.rotXZ==old){secretTaps++}else{secretTaps=0}}else{traveler.rotYZ=0;secretTaps=0}animation.stop();if(secretTaps==4){secretTaps=0;startGame()}};animation.initRotXZ=0;animation.totalRotXZ=0;animation.sectors=[[mf,mf,mu,mu,mf,mf],[mf,mf,ru,ru,mf,mf],[ml,rl,lv,lv,rr,mr],[ml,rl,lv,lv,rr,mr],[mb,mb,rd,rd,mb,mb],[mb,mb,md,md,mb,mb]];animation.keyAction=false;animation.KeyUpStopAction=false;animation.currentCallback=null;animation.speedReset=function(){animation.movSpeed=animation.initialSpeed};animation.rotReset=function(){animation.initRotXZ=traveler.rotXZ;animation.totalRotXZ=0};animation.reset=function(){animation.speedReset();animation.rotReset();animation.startTime=window.performance.now();animation.lastTime=animation.startTime};animation.start=function(callback){if(messageCanceledByAction)hideMessage();let myLaststop=animation.lastStop;var animate=function(){if(myLaststop!=animation.lastStop){console.log(myLaststop,animation.lastStop);return}if(animation.requestId==0)return;var time=window.performance.now();animation.deltaTime=time-animation.lastTime;animation.lastTime=time;callback();drawScene();if(animation.requestId==0)return;if(!(callback===gamepad.stopAction)){animation.requestId=window.requestAnimationFrame(animate)}};if(animation.requestId!=0)animation.stop();drawScene();animation.currentCallback=callback;animation.reset();animation.requestId=window.requestAnimationFrame(animate)};animation.lastStop=0;animation.stop=function(){animation.lastStop++;console.log("lastStop = ",animation.lastStop);if(animation.requestId)window.cancelAnimationFrame(animation.requestId);animation.requestId=0;drawScene();animation.reset();animation.currentCallback=null;const gp=navigator.getGamepads();if(gp[0]){gamepad.waitForNoAction=true;animation.start(gamepad.loop)}};animation.MouseUpStopAction=true;function setViewportProjections(){var wth=parseInt(window.innerWidth);var hth=parseInt(window.innerHeight);var canvas=document.getElementById("canvasId");canvas.setAttribute("width",""+wth);canvas.setAttribute("height",""+hth);gl.viewportWidth=wth;gl.viewportHeight=hth;projection.screenX=wth;projection.screenY=hth;pMatrix=projectionMatrix(projection);gl.viewport(0,0,wth,hth)}function onWindowResize(){animation.stop();setViewportProjections();drawScene()}function onKeyUp(e){animation.stop();animation.keyAction=false}function onKeyDown(e){if(animation.keyAction)return;animation.keyAction=true;var code=e.which||e.keyCode;switch(code){case 38:animation.start(ru);break;case 73:case 87:animation.start(mu);break;case 40:animation.start(rd);break;case 75:case 83:animation.start(md);break;case 37:animation.start(rl);break;case 74:case 65:animation.start(ml);break;case 39:animation.start(rr);break;case 76:case 68:animation.start(mr);break;case 70:case 13:animation.start(animation.movForward);break;case 66:case 86:case 8:animation.start(animation.movBack);break;case 32:animation.start(lv);break;case 84:animation.MouseUpStopAction=!animation.MouseUpStopAction;showMessage("INERTIA: "+!animation.MouseUpStopAction);break;case 88:startGame();break;case 27:hideMessage();break;case 72:showMessage(helpMessage);break}}function sectorAction(xSector,ySector){animation.start(animation.sectors[ySector][xSector])}function onMouseDown(evt){if(animation.requestId!=0){animation.stop();return}var wth=parseInt(window.innerWidth);var hth=parseInt(window.innerHeight);var xSector=Math.floor(6*evt.clientX/wth);var ySector=Math.floor(6*evt.clientY/hth);sectorAction(xSector,ySector)}function onMouseUp(evt){if(animation.MouseUpStopAction){animation.stop()}}function onTouchDown(evt){if(animation.requestId!=0){animation.stop();return}var wth=parseInt(window.innerWidth);var hth=parseInt(window.innerHeight);var xSector=Math.floor(6*evt.touches[0].clientX/wth);var ySector=Math.floor(6*evt.touches[0].clientY/hth);sectorAction(xSector,ySector)}function onTouchUp(evt){animation.stop()}function setCallbacks(){canvas=document.getElementById("canvasId");canvas.addEventListener("touchstart",onTouchDown,{passive:true});canvas.addEventListener("touchend",onTouchUp,{passive:true});canvas.addEventListener("mousedown",onMouseDown,{passive:true});canvas.addEventListener("mouseup",onMouseUp,{passive:true});window.onresize=onWindowResize;window.onkeydown=onKeyDown;window.onkeyup=onKeyUp;gp=null;window.addEventListener("gamepadconnected",(e=>{console.log("Gamepad connected at index %d: %s. %d buttons, %d axes.",e.gamepad.index,e.gamepad.id,e.gamepad.buttons.length,e.gamepad.axes.length);animation.stop();gamepad.waitForNoAction=true;showMessage("GAMEPAD ON")}));window.addEventListener("gamepaddisconnected",(e=>{gp=null;animation.stop();console.log("Gamepad disconnected from index %d: %s",e.gamepad.index,e.gamepad.id);showMessage("GAMEPAD OFF")}))}function cancelCallbacks(){clearCallbacks();animation.stop()}function clearCallbacks(){window.onresize=null;window.onkeydown=null;window.onkeyup=null;canvas.removeEventListener("touchstart",onTouchDown);canvas.removeEventListener("touchend",onTouchUp);canvas.removeEventListener("mousedown",onMouseDown);canvas.removeEventListener("mouseup",onMouseUp)}var gamepad={};const GPA_AxisRightX=2;const GPA_AxisRightY=3;const GPA_AxisLeftX=0;const GPA_AxisLeftY=1;const GPB_AxisLeftTrigger=6;const GPB_AxisRightTrigger=7;const GPB_ButtonDpadUp=12;const GPB_ButtonDpadDown=13;const GPB_ButtonDpadLeft=14;const GPB_ButtonDpadRight=15;const GPB_ButtonA=0;const GPB_ButtonStart=9;const GPB_ButtonHome=16;gamepad.loop=function(){let action=gamepad.whatAction();if(action==null){animation.stop()}else{if(!gamepad.waitForNoAction)action()}};gamepad.noAction=function(){animation.reset()};gamepad.animation=null;gamepad.lastCallback=null;gamepad.stop=false;gamepad.stopActionSet=false;gamepad.waitForNoAction=false;gamepad.lv=function(){if(gamepad.waitForNoAction)return;if(traveler.rotYZ==0){old=traveler.rotXZ;traveler.rotXZ=nearestRightAngle(traveler.rotXZ);gamepad.waitForNoAction=true;animation.stop()}else{traveler.rotYZ=0;secretTaps=0;gamepad.waitForNoAction=true;animation.stop()}};gamepad.startGame=function(){if(gamepad.waitForNoAction)return;startGame();animation.stop()};gamepad.whatAction=function(){const gp=navigator.getGamepads();if(gp[0]){let nextAction=gamepad.noAction;if(gp[0].axes[GPA_AxisRightX]<-.5){nextAction=rl}else if(gp[0].axes[GPA_AxisRightX]>.5){nextAction=rr}else if(gp[0].axes[GPA_AxisRightY]<-.5){nextAction=rd}else if(gp[0].axes[GPA_AxisRightY]>.5){nextAction=ru}else if(gp[0].axes[GPA_AxisLeftY]<-.5){nextAction=mf}else if(gp[0].axes[GPA_AxisLeftY]>.5){nextAction=mb}else if(gp[0].axes[GPA_AxisLeftX]<-.5){nextAction=ml}else if(gp[0].axes[GPA_AxisLeftX]>.5){nextAction=mr}else if(gp[0].buttons[GPB_AxisRightTrigger].pressed){nextAction=mf}else if(gp[0].buttons[GPB_AxisLeftTrigger].pressed){nextAction=mb}else if(gp[0].buttons[GPB_ButtonDpadUp].pressed){nextAction=mu}else if(gp[0].buttons[GPB_ButtonDpadDown].pressed){nextAction=md}else if(gp[0].buttons[GPB_ButtonDpadRight].pressed){nextAction=mr}else if(gp[0].buttons[GPB_ButtonDpadLeft].pressed){nextAction=ml}else if(gp[0].buttons[GPB_ButtonA].pressed){nextAction=gamepad.lv}else if(gp[0].buttons[GPB_ButtonStart].pressed){nextAction=gamepad.startGame()}else{if(gamepad.waitForNoAction){setTimeout(hideMessage(),1e4)}gamepad.waitForNoAction=false}return nextAction}else{null}};var nearestRightAngle=function(angle){angle=angle-Math.floor(angle/360)*360;var d=Math.abs(angle);var out=0;var x=Math.abs(angle-90);if(x<d){out=90;d=x}x=Math.abs(angle-180);if(x<d){out=180;d=x}x=Math.abs(angle-270);if(x<d){out=270;d=x}x=Math.abs(angle-360);if(x<d){out=0;d=x}return out};function maxDistance(v1,v2){let dx=Math.abs(v1[0]-v2[0]);let dy=Math.abs(v1[1]-v2[1]);let dz=Math.abs(v1[2]-v2[2]);return Math.max(dx,dy,dz)}var vectorClone=function(v){return[v[0],v[1],v[2]]};var vectorScale=function(v,sx,sy,sz){v[0]*=sx;v[1]*=sy;v[2]*=sz};var scalarProduct=function(v,w){return v[0]*w[0]+v[1]*w[1]+v[2]*w[2]};var vectorProduct=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]};var vectorLength=function(a){return Math.sqrt(scalarProduct(a,a))};var vectorNormalized=function(v){var len=vectorLength(v);if(len==0)return[0,0,0];var vn=vectorClone(v);var s=1/len;vectorScale(vn,s,s,s);return vn};var normalToPlane=function(a,b,c){var v1=[b[0]-a[0],b[1]-a[1],b[2]-a[2]];var v2=[c[0]-a[0],c[1]-a[1],c[2]-a[2]];return vectorNormalized(vectorProduct(v1,v2))};function glVector3(x,y,z){return new Float32Array(x,y,z)}function glMatrix4(xx,yx,zx,wx,xy,yy,zy,wy,xz,yz,zz,wz,xw,yw,zw,ww){return new Float32Array([xx,xy,xz,xw,yx,yy,yz,yw,zx,zy,zz,zw,wx,wy,wz,ww])}function glMatrix3(xx,yx,zx,xy,yy,zy,xz,yz,zz){return new Float32Array([xx,xy,xz,yx,yy,yz,zx,zy,zz])}var IdMatrix=glMatrix4(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);function projectionMatrix(projection){var zoomY=projection.zoomY;if(projection.screenY>projection.screenX){zoomY=projection.zoomY/(projection.screenY/projection.screenX)}var xx=zoomY*projection.screenY/projection.screenX;var yy=zoomY;var zz=(projection.zFar+projection.zNear)/(projection.zFar-projection.zNear);var zw=1;var wz=-2*projection.zFar*projection.zNear/(projection.zFar-projection.zNear);return glMatrix4(xx,0,0,0,0,yy,0,0,0,0,zz,wz,0,0,zw,0)}function worldRotatedVector(viewer,vector){var degToRadians=Math.PI/180;var c1=Math.cos(viewer.rotXZ*degToRadians);var s1=Math.sin(viewer.rotXZ*degToRadians);var c2=Math.cos(viewer.rotYZ*degToRadians);var s2=Math.sin(viewer.rotYZ*degToRadians);return[c1*vector[0]-s1*s2*vector[1]-s1*c2*vector[2],c2*vector[1]-s2*vector[2],s1*vector[0]+c1*s2*vector[1]+c1*c2*vector[2]]}function viewerRotatedVector(viewer,vector){var degToRadians=Math.PI/180;var c1=Math.cos(-viewer.rotXZ*degToRadians);var s1=Math.sin(-viewer.rotXZ*degToRadians);var c2=Math.cos(-viewer.rotYZ*degToRadians);var s2=Math.sin(-viewer.rotYZ*degToRadians);return[c1*vector[0]-s1*vector[2],-s2*s1*vector[0]+c2*vector[1]-s2*c1*vector[2],c2*s1*vector[0]+s2*vector[1]+c2*c1*vector[2]]}function modelViewMatrix(viewer){var degToRadians=Math.PI/180;var c1=Math.cos(-viewer.rotXZ*degToRadians);var s1=Math.sin(-viewer.rotXZ*degToRadians);var c2=Math.cos(-viewer.rotYZ*degToRadians);var s2=Math.sin(-viewer.rotYZ*degToRadians);var v=viewerRotatedVector(viewer,[-viewer.x,-viewer.y,-viewer.z]);return glMatrix4(c1,0,-s1,v[0],-s2*s1,c2,-s2*c1,v[1],c2*s1,s2,c2*c1,v[2],0,0,0,1)}function skyboxViewMatrix(viewer){var degToRadians=Math.PI/180;var c1=Math.cos(-viewer.rotXZ*degToRadians);var s1=Math.sin(-viewer.rotXZ*degToRadians);var c2=Math.cos(-viewer.rotYZ*degToRadians);var s2=Math.sin(-viewer.rotYZ*degToRadians);var v=viewerRotatedVector(viewer,[-viewer.x,-viewer.y,-viewer.z]);return glMatrix4(c1,0,-s1,0,-s2*s1,c2,-s2*c1,0,c2*s1,s2,c2*c1,0,0,0,0,1)}function computeMatrices(viewer){var degToRadians=Math.PI/180;var c1=Math.cos(-viewer.rotXZ*degToRadians);var s1=Math.sin(-viewer.rotXZ*degToRadians);var c2=Math.cos(-viewer.rotYZ*degToRadians);var s2=Math.sin(-viewer.rotYZ*degToRadians);var v=viewerRotatedVector(viewer,[-viewer.x,-viewer.y,-viewer.z]);return{modelView:glMatrix4(c1,0,-s1,v[0],-s2*s1,c2,-s2*c1,v[1],c2*s1,s2,c2*c1,v[2],0,0,0,1),revRot:glMatrix3(c1,-s1*s2,s1*c2,0,c2,s2,-s1,-c1*s2,c1*c2)}}var showMessage=function(textHTML){var message=document.querySelector("#messageDiv");if(message){message.innerHTML=textHTML;message.style.display="block"}};var hideMessage=function(){var message=document.querySelector("#messageDiv");if(message){message.style.display="none"}};var helpMessage=`\n<div  style="font-size:20px;">\n    <h2>HELP SCREEN:</h2>\n    <h3>Key bindings:</h3>\n    <dl>\n    <dt>'H':</dt>\n    <dd>Display this help message</dd>\n    <dt>Enter,'F' / Backspace, 'B', 'V':</dt>\n    <dd>Move forward / backward.</dd>\n    <dt>Arrow keys:</dt>\n    <dd>Rotate up/down/left/right.</dd>\n    <dt>'I'/'J'/'K'/'L':</dt>\n    <dd>Move up/down/left/right.</dd>\n    <dt>'T'</dt>\n    <dd>Toggle mouse-click inertia on/off.</dd>\n    <dt>Escape:</dt>\n    <dd>Hide the message box</dd>\n    </dl>\n </div>  \n `;var messageCanceledByAction=true;var mki3d={};mki3d.data=mki3d.defaultData={model:{segments:[[{position:[2,0,0],color:[1,1,1],set:0},{position:[4,-2,0],color:[1,1,1],set:0}],[{position:[2,0,0],color:[1,1,1],set:0},{position:[4,2,0],color:[1,1,1],set:0}],[{position:[4,-2,0],color:[1,1,1],set:0},{position:[4,-1,0],color:[1,1,1],set:0}],[{position:[4,-1,0],color:[1,1,1],set:0},{position:[8,-1,0],color:[1,1,1],set:0}],[{position:[4,1,0],color:[1,1,1],set:0},{position:[4,2,0],color:[1,1,1],set:0}],[{position:[4,1,0],color:[1,1,1],set:0},{position:[8,1,0],color:[1,1,1],set:0}],[{position:[8,-1,0],color:[1,1,1],set:0},{position:[8,1,0],color:[1,1,1],set:0}],[{position:[0,3,0],color:[1,1,1],set:1},{position:[-1,3,0],color:[1,1,1],set:1}],[{position:[0,3,0],color:[1,1,1],set:1},{position:[0,7,0],color:[1,1,1],set:1}],[{position:[1,1,0],color:[1,1,1],set:1},{position:[-1,3,0],color:[1,1,1],set:1}],[{position:[1,1,0],color:[1,1,1],set:1},{position:[3,3,0],color:[1,1,1],set:1}],[{position:[2,3,0],color:[1,1,1],set:1},{position:[2,7,0],color:[1,1,1],set:1}],[{position:[2,7,0],color:[1,1,1],set:1},{position:[0,7,0],color:[1,1,1],set:1}],[{position:[3,3,0],color:[1,1,1],set:1},{position:[2,3,0],color:[1,1,1],set:1}],[{position:[-6,1,0],color:[1,1,1],set:2},{position:[-6,-1,0],color:[1,1,1],set:2}],[{position:[-2,-1,0],color:[1,1,1],set:2},{position:[-6,-1,0],color:[1,1,1],set:2}],[{position:[-2,-1,0],color:[1,1,1],set:2},{position:[-2,-2,0],color:[1,1,1],set:2}],[{position:[-2,1,0],color:[1,1,1],set:2},{position:[-6,1,0],color:[1,1,1],set:2}],[{position:[-2,2,0],color:[1,1,1],set:2},{position:[-2,1,0],color:[1,1,1],set:2}],[{position:[0,0,0],color:[1,1,1],set:2},{position:[-2,-2,0],color:[1,1,1],set:2}],[{position:[0,0,0],color:[1,1,1],set:2},{position:[-2,2,0],color:[1,1,1],set:2}],[{position:[-1,-3,0],color:[1,1,1],set:3},{position:[0,-3,0],color:[1,1,1],set:3}],[{position:[0,-7,0],color:[1,1,1],set:3},{position:[2,-7,0],color:[1,1,1],set:3}],[{position:[0,-3,0],color:[1,1,1],set:3},{position:[0,-7,0],color:[1,1,1],set:3}],[{position:[1,-1,0],color:[1,1,1],set:3},{position:[-1,-3,0],color:[1,1,1],set:3}],[{position:[1,-1,0],color:[1,1,1],set:3},{position:[3,-3,0],color:[1,1,1],set:3}],[{position:[2,-3,0],color:[1,1,1],set:3},{position:[2,-7,0],color:[1,1,1],set:3}],[{position:[2,-3,0],color:[1,1,1],set:3},{position:[3,-3,0],color:[1,1,1],set:3}]],triangles:[[{position:[2,0,0],color:[0,0,1],set:0},{position:[4,-2,0],color:[0,0,1],set:0},{position:[4,2,0],color:[0,0,1],set:0}],[{position:[4,-1,0],color:[0,0,1],set:0},{position:[4,1,0],color:[0,0,1],set:0},{position:[8,-1,0],color:[0,0,1],set:0}],[{position:[4,1,0],color:[0,0,1],set:0},{position:[8,-1,0],color:[0,0,1],set:0},{position:[8,1,0],color:[0,0,1],set:0}],[{position:[0,3,0],color:[0,0,1],set:1},{position:[2,7,0],color:[0,0,1],set:1},{position:[0,7,0],color:[0,0,1],set:1}],[{position:[1,1,0],color:[0,0,1],set:1},{position:[3,3,0],color:[0,0,1],set:1},{position:[-1,3,0],color:[0,0,1],set:1}],[{position:[2,3,0],color:[0,0,1],set:1},{position:[0,3,0],color:[0,0,1],set:1},{position:[2,7,0],color:[0,0,1],set:1}],[{position:[-2,-1,0],color:[0,0,1],set:2},{position:[-6,1,0],color:[0,0,1],set:2},{position:[-6,-1,0],color:[0,0,1],set:2}],[{position:[-2,1,0],color:[0,0,1],set:2},{position:[-2,-1,0],color:[0,0,1],set:2},{position:[-6,1,0],color:[0,0,1],set:2}],[{position:[0,0,0],color:[0,0,1],set:2},{position:[-2,2,0],color:[0,0,1],set:2},{position:[-2,-2,0],color:[0,0,1],set:2}],[{position:[0,-3,0],color:[0,0,1],set:3},{position:[2,-3,0],color:[0,0,1],set:3},{position:[0,-7,0],color:[0,0,1],set:3}],[{position:[1,-1,0],color:[0,0,1],set:3},{position:[-1,-3,0],color:[0,0,1],set:3},{position:[3,-3,0],color:[0,0,1],set:3}],[{position:[2,-3,0],color:[0,0,1],set:3},{position:[0,-7,0],color:[0,0,1],set:3},{position:[2,-7,0],color:[0,0,1],set:3}]]},view:{focusPoint:[1,0,0],rotationMatrix:[[1,0,0],[0,1,0],[0,0,1]],scale:1,screenShift:[0,0,60]},projection:{zNear:.25,zFar:300,zoomY:4},backgroundColor:[0,0,0],cursor:{position:[1,0,-20],marker1:null,marker2:null,color:[0,0,1],step:1},clipMaxVector:[1e20,1e20,1e20],clipMinVector:[-1e20,-1e20,-1e20],light:{vector:[0,0,1],ambientFraction:.2},set:{current:3},links:[{label:"INDEX",opener:"",url:"travel-index.html",position:[1,0,0]}]};mki3d.url={};mki3d.url.base=document.URL;mki3d.url.symbol={model:{segments:[[{position:[-.5,0,0],color:[0,0,1],set:0},{position:[0,-.5,0],color:[0,0,1],set:0}],[{position:[-.5,0,0],color:[0,0,1],set:0},{position:[0,.5,0],color:[0,0,1],set:0}],[{position:[0,-.5,0],color:[0,0,1],set:0},{position:[.5,0,0],color:[0,0,1],set:0}],[{position:[0,.5,0],color:[0,0,1],set:0},{position:[.5,0,0],color:[0,0,1],set:0}]],triangles:[[{position:[-.5,0,0],color:[1,1,1],set:0},{position:[0,-.5,0],color:[1,1,1],set:0},{position:[0,0,0],color:[1,1,1],set:0}],[{position:[-.5,0,0],color:[1,0,0],set:0},{position:[0,0,0],color:[1,0,0],set:0},{position:[0,.5,0],color:[1,0,0],set:0}],[{position:[0,-.5,0],color:[1,0,0],set:0},{position:[0,0,0],color:[1,0,0],set:0},{position:[.5,0,0],color:[1,0,0],set:0}],[{position:[0,0,0],color:[1,1,1],set:0},{position:[0,.5,0],color:[1,1,1],set:0},{position:[.5,0,0],color:[1,1,1],set:0}]]},view:{focusPoint:[0,0,0],rotationMatrix:[[1,0,0],[0,1,0],[0,0,1]],scale:2,screenShift:[0,0,60]},projection:{zNear:.25,zFar:300,zoomY:4},backgroundColor:[0,1,1],cursor:{position:[0,0,0],marker1:null,marker2:null,color:[0,0,1],step:.5},clipMaxVector:[1e20,1e20,1e20],clipMinVector:[-1e20,-1e20,-1e20],light:{vector:[0,0,1],ambientFraction:.2},set:{current:0}};mki3d.sectors={model:{segments:[[{position:[-1,-1,0],color:[1,0,0],set:0},{position:[-1,1,0],color:[1,0,0],set:0}],[{position:[-1,-1,0],color:[1,0,0],set:0},{position:[1,-1,0],color:[1,0,0],set:0}],[{position:[-1,-.3333333333333333,0],color:[1,0,0],set:0},{position:[1,-.3333333333333333,0],color:[1,0,0],set:0}],[{position:[-1,.3333333333333333,0],color:[1,0,0],set:0},{position:[1,.3333333333333333,0],color:[1,0,0],set:0}],[{position:[-1,1,0],color:[1,0,0],set:0},{position:[1,1,0],color:[1,0,0],set:0}],[{position:[-.6666666666666666,-.3333333333333333,0],color:[1,0,0],set:0},{position:[-.6666666666666666,.3333333333333333,0],color:[1,0,0],set:0}],[{position:[-.3333333333333333,-1,0],color:[1,0,0],set:0},{position:[-.3333333333333333,1,0],color:[1,0,0],set:0}],[{position:[-.3333333333333333,-.6666666666666666,0],color:[1,0,0],set:0},{position:[.3333333333333333,-.6666666666666666,0],color:[1,0,0],set:0}],[{position:[-.3333333333333333,.6666666666666666,0],color:[1,0,0],set:0},{position:[.3333333333333333,.6666666666666666,0],color:[1,0,0],set:0}],[{position:[.3333333333333333,-1,0],color:[1,0,0],set:0},{position:[.3333333333333333,1,0],color:[1,0,0],set:0}],[{position:[.6666666666666666,-.3333333333333333,0],color:[1,0,0],set:0},{position:[.6666666666666666,.3333333333333333,0],color:[1,0,0],set:0}],[{position:[1,-1,0],color:[1,0,0],set:0},{position:[1,1,0],color:[1,0,0],set:0}]],triangles:[]},view:{focusPoint:[0,0,0],rotationMatrix:[[1,0,0],[0,1,0],[0,0,1]],scale:10,screenShift:[0,0,60]},projection:{zNear:.25,zFar:300,zoomY:4},backgroundColor:[0,0,0],cursor:{position:[0,0,0],marker1:null,marker2:null,color:[1,0,0],step:.1},clipMaxVector:[1e20,1e20,1e20],clipMinVector:[-1e20,-1e20,-1e20],light:{vector:[0,0,1],ambientFraction:.2},set:{current:0}};mki3d.token={model:{segments:[],triangles:[[{position:[-.5,-.5,0],color:[1,0,0],set:0},{position:[-.5,.5,0],color:[1,0,0],set:0},{position:[.5,.5,0],color:[1,0,0],set:0}],[{position:[-.5,-.5,0],color:[1,0,0],set:0},{position:[.5,-.5,0],color:[1,0,0],set:0},{position:[.5,.5,0],color:[1,0,0],set:0}],[{position:[0,-.5,-.5],color:[1,0,0],set:1},{position:[0,-.5,.5],color:[1,0,0],set:1},{position:[0,.5,.5],color:[1,0,0],set:1}],[{position:[0,-.5,-.5],color:[1,0,0],set:1},{position:[0,.5,-.5],color:[1,0,0],set:1},{position:[0,.5,.5],color:[1,0,0],set:1}],[{position:[-.5,0,-.5],color:[1,0,0],set:2},{position:[-.5,0,.5],color:[1,0,0],set:2},{position:[.5,0,.5],color:[1,0,0],set:2}],[{position:[-.5,0,-.5],color:[1,0,0],set:2},{position:[.5,0,-.5],color:[1,0,0],set:2},{position:[.5,0,.5],color:[1,0,0],set:2}]]},view:{focusPoint:[0,0,0],rotationMatrix:[[-.35230746421756876,-.6317234038224893,.6905106745876668],[-.9103459256928599,.40250381057071194,-.09623397555160806],[-.2171399231624566,-.6625075271564731,-.7168919236747049]],scale:1,screenShift:[0,0,60]},projection:{zNear:.25,zFar:300,zoomY:4},backgroundColor:[0,0,0],cursor:{position:[0,0,0],marker1:{position:[-1,-1,0],color:[1,1,1],set:0},marker2:null,color:[1,0,0],step:1},clipMaxVector:[1e20,1e20,1e20],clipMinVector:[-1e20,-1e20,-1e20],light:{vector:[-.38551922531132526,-.5648625214636234,.7295925292662425],ambientFraction:.2},set:{current:2}};mki3d.message=showMessage;mki3d.url.inputLoaded=false;mki3d.url.load=async function(input,data){let backup=data;let url;try{if(mki3d.url.base)url=new URL(input,mki3d.url.base);else url=new URL(input);let response=await fetch(url);let result=await response.json();data=result;let pathname=url.pathname;let filename=pathname.substring(pathname.lastIndexOf("/")+1);mki3d.url.inputLoaded=true;mki3d_texture.deleteTextureGlObjects(backup,gl)}catch(err){console.log(err);mki3d.message("<div style='font-size:30px;'>FAILED TO LOAD FROM "+url+".</div>");data=backup;mki3d.url.inputLoaded=false}return data};mki3d.url.completeLink=function(opener,input){if(!input)return null;let url;if(mki3d.url.base)url=new URL(input,mki3d.url.base);else url=new URL(input);if(!opener)return url;let openerURL=new URL(opener,window.location.href);return String(openerURL)+encodeURI(String(url))};var mki3dIndex={};var mki3dStage={};var mki3dLinkSymbol={};var loadedStage={};var shadeFactor=function(triangle,light){var normal=normalToPlane(triangle[0].position,triangle[1].position,triangle[2].position);var sp=scalarProduct(light.vector,normal);return light.ambientFraction+(1-light.ambientFraction)*Math.abs(sp)};function makeGraph(mki3dData,light){const MKI3D_VERTEX_POSITION_SIZE=3;var model=mki3dData.model;var graph={};var elements=[];var elementsColors=[];var i,j;for(i=0;i<model.segments.length;i++){for(j=0;j<2;j++){elements.push(model.segments[i][j].position[0]);elements.push(model.segments[i][j].position[1]);elements.push(model.segments[i][j].position[2]);elementsColors.push(model.segments[i][j].color[0]);elementsColors.push(model.segments[i][j].color[1]);elementsColors.push(model.segments[i][j].color[2])}}graph.nrOfLines=elements.length/(2*MKI3D_VERTEX_POSITION_SIZE);graph.linesVertices=new Float32Array(elements);graph.linesColors=new Float32Array(elementsColors);elements=[];elementsColors=[];for(i=0;i<model.triangles.length;i++){var triangle=model.triangles[i];if(!triangle.shade)triangle.shade=shadeFactor(triangle,light);for(j=0;j<3;j++){elements.push(triangle[j].position[0]);elements.push(triangle[j].position[1]);elements.push(triangle[j].position[2]);elementsColors.push(triangle[j].color[0]*triangle.shade);elementsColors.push(triangle[j].color[1]*triangle.shade);elementsColors.push(triangle[j].color[2]*triangle.shade)}}graph.nrOfTriangles=elements.length/(3*MKI3D_VERTEX_POSITION_SIZE);graph.trianglesVertices=new Float32Array(elements);graph.trianglesColors=new Float32Array(elementsColors);if(mki3dData.texture){mki3dData.texture.elements=mki3d_texture.getArrayOfNonEmptyElements(mki3dData);mki3d_texture.makeGlInTextures(mki3dData,shadeFactor,gl,(function(gl,vs,fs){return compileAndLinkShader(fs,vs)}));graph.texture=mki3dData.texture}return graph}function copmuteVMinVMax(mki3dData){var VMax=vectorClone(mki3dData.cursor.position);var VMin=vectorClone(VMax);for(var s=0;s<mki3dData.model.segments.length;s++){var seg=mki3dData.model.segments[s];for(p=0;p<seg.length;p++){var point=seg[p];for(var d=0;d<point.position.length;d++){if(VMax[d]<point.position[d]){VMax[d]=point.position[d]}if(VMin[d]>point.position[d]){VMin[d]=point.position[d]}}}}for(var t=0;t<mki3dData.model.triangles.length;t++){var tr=mki3dData.model.triangles[t];for(var p=0;p<tr.length;p++){var point=tr[p];for(var d=0;d<point.position.length;d++){if(VMax[d]<point.position[d]){VMax[d]=point.position[d]}if(VMin[d]>point.position[d]){VMin[d]=point.position[d]}}}}if(!mki3d.data.links)return[VMin,VMax];var i;for(i=0;i<mki3d.data.links.length;i++){let position=mki3d.data.links[i].position;for(var d=0;d<position.length;d++){if(VMax[d]<position[d]){VMax[d]=position[d]}if(VMin[d]>position[d]){VMin[d]=position[d]}}}return[VMin,VMax]}function makeTraveler(mki3dData){var vbox=copmuteVMinVMax(mki3dData);var traveler={};traveler.vMin=vbox[0];traveler.vMax=vbox[1];traveler.x=mki3dData.cursor.position[0];traveler.y=mki3dData.cursor.position[1];traveler.z=mki3dData.cursor.position[2];traveler.rotXZ=0;traveler.rotYZ=0;return traveler}function makeStage(mki3dData,mki3dToken,mki3dLinkSymbol){var stage={};stage.traveler=makeTraveler(mki3dData);stage.bgColor=mki3dData.backgroundColor;var light=mki3dData.light;stage.scene=makeGraph(mki3dData,light);stage.token=makeGraph(mki3dToken,light);stage.linkSymbol=makeGraph(mki3dLinkSymbol,mki3dLinkSymbol.light);stage.frameBox=makeFrameBox(stage.traveler);return stage}var mki3d_texture={};mki3d_texture.texSize=256;mki3d_texture.renderTextureVS=function(def){let test=def.R.concat(def.G).concat(def.B).concat(def.A);if(test.includes(";")||test.includes("}")){console.log("mki3d_texture.renderTextureVS WARNING of ';' or '}':");console.log(def);def.label=def.label.concat("!!! BAD !!!");def.R=def.G=def.B="0.0";def.A="1.0"}return""+"const float PI = "+Math.PI+";\n"+"const int texSize= "+mki3d_texture.texSize+";\n"+"float G(float x,float y);\n"+"float B(float x,float y);\n"+"float A(float x,float y);\n"+"float R(float x,float y){ return  "+def.R+"; }\n"+"float G(float x,float y){ return  "+def.G+"; }\n"+"float B(float x,float y){ return  "+def.B+"; }\n"+"float A(float x,float y){ return  "+def.A+"; }\n"+"attribute float h;\n"+"uniform float v;\n"+"varying vec4 color;\n"+"void main()\n"+"{\n"+"  float  args[6];\n"+"  float h=h-float(texSize)/2.0;\n"+"  float v=v-float(texSize)/2.0;\n"+"  float x= 2.0*h/float(texSize); \n"+"  float y= 2.0*v/float(texSize); \n"+"  color= vec4( R(x,y), G(x,y), B(x,y), A(x,y) );\n"+"  gl_Position = vec4( x, y, 0.0, 1.0 );\n"+"  gl_PointSize=1.0;\n"+"}\n"};mki3d_texture.renderTextureFS=""+"precision mediump float;\n"+"varying vec4 color;\n"+"void main()\n"+"{\n"+"  gl_FragColor= color;\n"+"}\n";var makeShaderProgramTool=function(gl,vertexShaderSource,fragmentShaderSource){var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertexShaderSource);gl.compileShader(vertexShader);if(!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)){console.log(gl.getShaderInfoLog(vertexShader));console.log(vertexShaderSource);return null}var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragmentShaderSource);gl.compileShader(fragmentShader);if(!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)){console.log(gl.getShaderInfoLog(fragmentShader));console.log(fragmentShaderSource);return null}var shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertexShader);gl.attachShader(shaderProgram,fragmentShader);gl.linkProgram(shaderProgram);if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)){console.log("Could not initialise shaders");return null}return shaderProgram};mki3d_texture.drawElementVS=""+"attribute vec3 posAttr;\n"+"attribute vec3 texAttr;\n"+"uniform mat4 uMVMatrix; "+"uniform mat4 uPMatrix; "+"varying vec3 vPosition;"+"varying vec3 texUVS;\n"+"void main()\n"+"{\n"+"    gl_Position =   uPMatrix*uMVMatrix*vec4(posAttr, 1.0); "+"    texUVS = texAttr;\n"+"    vPosition = posAttr; "+"}\n";mki3d_texture.drawElementFS=""+"precision mediump float;\n"+"varying vec3 texUVS;\n"+"varying vec3 vPosition;"+"uniform sampler2D texSampler;\n"+"void main()\n"+"{\n"+"    gl_FragColor = vec4(texUVS.z*texture2D(texSampler, texUVS.xy).rgb, 1.0);\n"+"}\n";mki3d_texture.createTexture=function(gl,def){let texSize=mki3d_texture.texSize;if(!mki3d_texture.hBufferId){mki3d_texture.hBufferId=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,mki3d_texture.hBufferId);let hIn=[];for(let i=0;i<texSize+4;i++){hIn.push(i-2)}gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(hIn),gl.STATIC_DRAW)}let textureId=gl.createTexture();if(!textureId)return textureId;gl.bindTexture(gl.TEXTURE_2D,textureId);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,texSize,texSize,0,gl.RGBA,gl.UNSIGNED_BYTE,null);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR_MIPMAP_LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT);if(!mki3d_texture.frameBufferId){mki3d_texture.frameBufferId=gl.createFramebuffer()}if(mki3d_texture.renderTextureShaderProgram){gl.deleteProgram(mki3d_texture.renderTextureShaderProgram)}mki3d_texture.renderTextureShaderProgram=makeShaderProgramTool(gl,mki3d_texture.renderTextureVS(def),mki3d_texture.renderTextureFS);if(!mki3d_texture.renderTextureShaderProgram){return null}mki3d_texture.hLocation=gl.getAttribLocation(mki3d_texture.renderTextureShaderProgram,"h");mki3d_texture.vLocation=gl.getUniformLocation(mki3d_texture.renderTextureShaderProgram,"v");gl.useProgram(mki3d_texture.renderTextureShaderProgram);let defaultFBO=gl.getParameter(gl.FRAMEBUFFER_BINDING);let oldViewport=gl.getParameter(gl.VIEWPORT);gl.bindFramebuffer(gl.FRAMEBUFFER,mki3d_texture.frameBufferId);gl.viewport(0,0,texSize,texSize);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,textureId,0);gl.enableVertexAttribArray(mki3d_texture.hLocation);gl.bindBuffer(gl.ARRAY_BUFFER,mki3d_texture.hBufferId);for(let j=0;j<texSize+4;j++){gl.uniform1f(mki3d_texture.vLocation,j-2);gl.vertexAttribPointer(mki3d_texture.hLocation,1,gl.FLOAT,false,0,0);gl.drawArrays(gl.POINTS,0,texSize+4)}gl.disableVertexAttribArray(mki3d_texture.hLocation);gl.bindTexture(gl.TEXTURE_2D,textureId);gl.generateMipmap(gl.TEXTURE_2D);gl.bindFramebuffer(gl.FRAMEBUFFER,defaultFBO);gl.viewport(0,0,oldViewport[2],oldViewport[3]);return textureId};mki3d_texture.makeGlInElement=function(element,light,shadeFactor,gl,compileAndLinkShaderProgram){element.gl=null;let texID=mki3d_texture.createTexture(gl,element.def,compileAndLinkShaderProgram);if(!texID)return;element.gl={};element.gl.textureId=texID;element.gl.posAttrBuffer=gl.createBuffer();element.gl.texAttrBuffer=gl.createBuffer();mki3d_texture.loadElementGlBuffers(element,light,shadeFactor,gl)};mki3d_texture.createElement=function(def,shadeFactor,gl,compileAndLinkShaderProgram){let element={};element.def=def;element.texturedTriangles=[];mki3d_texture.makeGlInElement(element,[0,0,1],shadeFactor,gl,compileAndLinkShaderProgram);if(element.gl===null)return null;return element};mki3d_texture.deleteElementGlObjects=function(element,gl){gl.deleteTexture(element.gl.textureId);gl.deleteBuffer(element.gl.posAttrBuffer);gl.deleteBuffer(element.gl.texAttrBuffer)};mki3d_texture.deleteTextureGlObjects=function(data,gl){if(!data.texture){return}let elements=data.texture.elements;for(let i=0;i<elements.length;i++){mki3d_texture.deleteElementGlObjects(elements[i],gl)}};mki3d_texture.cleanGlFromElements=function(data){if(!data.texture){return}let elements=data.texture.elements;for(let i=0;i<elements.length;i++){delete elements[i].gl}};mki3d_texture.makeGlInTextures=function(data,shadeFactor,gl,compileAndLinkShaderProgram){if(!data.texture){return}let elements=data.texture.elements;for(let i=0;i<elements.length;i++){mki3d_texture.makeGlInElement(elements[i],data.light,shadeFactor,gl,compileAndLinkShaderProgram)}};mki3d_texture.equalDefs=function(def1,def2){if(def1==def2)return true;if(def1.label===def2.label&&def1.R===def2.R&&def1.G===def2.G&&def1.B===def2.B&&def1.A===def2.A){return true}return false};mki3d_texture.pushElement=function(element,data){if(!data.texture){data.texture={};data.texture.elements=[];data.texture.index=-1}data.texture.index=data.texture.elements.length;data.texture.elements.push(element)};mki3d_texture.addTexturedTriangleToElement=function(texturedTriangle,element){element.texturedTriangles.push(texturedTriangle);element.gl.validBuffers=false};mki3d_texture.getArrayOfNonEmptyElements=function(data){if(!data.texture||!data.texture.elements)return[];let array=[];for(let i=0;i<data.texture.elements.length;i++){if(data.texture.elements[i].texturedTriangles.length>0){array.push(data.texture.elements[i])}}return array};mki3d_texture.reloadAllGlBuffers=function(data,shadeFactor,gl){if(!data.texture)return;elements=data.texture.elements;for(let i=0;i<elements.length;i++){mki3d_texture.loadElementGlBuffers(elements[i],data.light,shadeFactor,gl)}};mki3d_texture.loadElementGlBuffers=function(element,light,shadeFactor,gl){{let pos=[];for(let i=0;i<element.texturedTriangles.length;i++){let triangle=element.texturedTriangles[i].triangle;if(!triangle.shade){triangle.shade=shadeFactor(triangle,light)}for(let j=0;j<3;j++){pos.push(triangle[j].position[0]);pos.push(triangle[j].position[1]);pos.push(triangle[j].position[2])}}gl.bindBuffer(gl.ARRAY_BUFFER,element.gl.posAttrBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(pos),gl.DYNAMIC_DRAW)}{let tex=[];for(let i=0;i<element.texturedTriangles.length;i++){let shade=element.texturedTriangles[i].triangle.shade;let triangleUV=element.texturedTriangles[i].triangleUV;for(let j=0;j<3;j++){tex.push(triangleUV[j][0]);tex.push(triangleUV[j][1]);tex.push(shade)}}gl.bindBuffer(gl.ARRAY_BUFFER,element.gl.texAttrBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(tex),gl.DYNAMIC_DRAW)}element.gl.validBuffers=true};mki3d_texture.redraw=function(gl,modelViewGL,monoProjectionGL,data,shadeFactor,compileAndLinkShaderProgram){let oldProgram=gl.getParameter(gl.CURRENT_PROGRAM);if(!mki3d_texture.drawElement){mki3d_texture.drawElement={};mki3d_texture.drawElement.shaderProgram=compileAndLinkShaderProgram(gl,mki3d_texture.drawElementVS,mki3d_texture.drawElementFS);let shaderProgram=mki3d_texture.drawElement.shaderProgram;mki3d_texture.drawElement.posAttr=gl.getAttribLocation(shaderProgram,"posAttr");mki3d_texture.drawElement.texAttr=gl.getAttribLocation(shaderProgram,"texAttr");mki3d_texture.drawElement.texSampler=gl.getUniformLocation(shaderProgram,"texSampler");mki3d_texture.drawElement.uPMatrix=gl.getUniformLocation(shaderProgram,"uPMatrix");mki3d_texture.drawElement.uMVMatrix=gl.getUniformLocation(shaderProgram,"uMVMatrix");gl.useProgram(shaderProgram);gl.uniform1i(mki3d_texture.drawElement.texSampler,0)}let shaderProgram=mki3d_texture.drawElement.shaderProgram;gl.useProgram(shaderProgram);gl.uniformMatrix4fv(mki3d_texture.drawElement.uMVMatrix,false,modelViewGL);gl.uniformMatrix4fv(mki3d_texture.drawElement.uPMatrix,false,monoProjectionGL);gl.enableVertexAttribArray(mki3d_texture.drawElement.posAttr);gl.enableVertexAttribArray(mki3d_texture.drawElement.texAttr);let elements=mki3d_texture.getArrayOfNonEmptyElements(data);for(let i=0;i<elements.length;i++){if(!elements[i].gl.validBuffers){mki3d_texture.loadElementGlBuffers(elements[i],data.light,shadeFactor,gl)}gl.activeTexture(gl.TEXTURE0);gl.bindTexture(gl.TEXTURE_2D,elements[i].gl.textureId);gl.bindBuffer(gl.ARRAY_BUFFER,elements[i].gl.posAttrBuffer);gl.vertexAttribPointer(mki3d_texture.drawElement.posAttr,3,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,elements[i].gl.texAttrBuffer);gl.vertexAttribPointer(mki3d_texture.drawElement.texAttr,3,gl.FLOAT,false,0,0);gl.drawArrays(gl.TRIANGLES,0,3*elements[i].texturedTriangles.length)}gl.disableVertexAttribArray(mki3d_texture.drawElement.posAttr);gl.disableVertexAttribArray(mki3d_texture.drawElement.texAttr);gl.useProgram(oldProgram)};function initGL(canvas){try{gl=canvas.getContext("webgl");gl.viewportWidth=canvas.width;gl.viewportHeight=canvas.height}catch(e){}if(!gl){console.log("Could not initialise WebGL, sorry :-(")}}function tryToCompileShader(shader){gl.compileShader(shader);if(!gl.getShaderParameter(shader,gl.COMPILE_STATUS)){console.log(gl.getShaderInfoLog(shader))}}function compileAndLinkShader(FRAGMENT_SHADER_STRING,VERTEX_SHADER_STRING){var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,FRAGMENT_SHADER_STRING);tryToCompileShader(fragmentShader);var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,VERTEX_SHADER_STRING);tryToCompileShader(vertexShader);var shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,vertexShader);gl.attachShader(shaderProgram,fragmentShader);gl.linkProgram(shaderProgram);if(!gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)){console.log("Could not initialise shaders")}return shaderProgram}function initShaders(){shaderProgram=compileAndLinkShader(FRAGMENT_SHADER_STRING,VERTEX_SHADER_STRING);shaderProgram.vertexPositionAttribute=gl.getAttribLocation(shaderProgram,"aVertexPosition");shaderProgram.vertexColorAttribute=gl.getAttribLocation(shaderProgram,"aVertexColor");shaderProgram.pMatrixUniform=gl.getUniformLocation(shaderProgram,"uPMatrix");shaderProgram.mvMatrixUniform=gl.getUniformLocation(shaderProgram,"uMVMatrix");shaderProgram.vMov=gl.getUniformLocation(shaderProgram,"mov");shaderProgram.mRot=gl.getUniformLocation(shaderProgram,"rot")}function setMatrixUniforms(){gl.uniformMatrix4fv(shaderProgram.pMatrixUniform,false,pMatrix);gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform,false,mvMatrix)}function declareBuffers(graph){graph.linesVerticesBuffer=gl.createBuffer();graph.linesColorsBuffer=gl.createBuffer();graph.trianglesVerticesBuffer=gl.createBuffer();graph.trianglesColorsBuffer=gl.createBuffer()}function loadBuffers(graph,buf){gl.bindBuffer(gl.ARRAY_BUFFER,buf.linesVerticesBuffer);gl.bufferData(gl.ARRAY_BUFFER,graph.linesVertices,gl.STATIC_DRAW);graph.linesVerticesBuffer=buf.linesVerticesBuffer;gl.bindBuffer(gl.ARRAY_BUFFER,buf.linesColorsBuffer);gl.bufferData(gl.ARRAY_BUFFER,graph.linesColors,gl.STATIC_DRAW);graph.linesColorsBuffer=buf.linesColorsBuffer;gl.bindBuffer(gl.ARRAY_BUFFER,buf.trianglesVerticesBuffer);gl.bufferData(gl.ARRAY_BUFFER,graph.trianglesVertices,gl.STATIC_DRAW);graph.trianglesVerticesBuffer=buf.trianglesVerticesBuffer;gl.bindBuffer(gl.ARRAY_BUFFER,buf.trianglesColorsBuffer);gl.bufferData(gl.ARRAY_BUFFER,graph.trianglesColors,gl.STATIC_DRAW);graph.trianglesColorsBuffer=buf.trianglesColorsBuffer}function initBuffers(graph){declareBuffers(graph);loadBuffers(graph,graph)}function drawSectors(){gl.useProgram(shaderProgram);gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform,false,glMatrix4(1,0,0,0,0,1,0,0,0,0,1,-1,0,0,0,1));gl.uniformMatrix4fv(shaderProgram.pMatrixUniform,false,IdMatrix);drawGraph(sectors);gl.uniformMatrix4fv(shaderProgram.pMatrixUniform,false,pMatrix);gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform,false,mvMatrix)}function drawScene(){gl.useProgram(shaderProgram);gl.viewport(0,0,gl.viewportWidth,gl.viewportHeight);gl.depthFunc(gl.LEQUAL);gl.clearColor(bgColor[0],bgColor[1],bgColor[2],1);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);travMatrices=computeMatrices(traveler);mvMatrix=travMatrices.modelView;gl.uniformMatrix3fv(shaderProgram.mRot,false,glMatrix3(1,0,0,0,1,0,0,0,1));gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform,false,mvMatrix);gl.uniformMatrix4fv(shaderProgram.pMatrixUniform,false,pMatrix);gl.uniform3f(shaderProgram.vMov,0,0,0);drawGraph(scene);drawGraph(frameBox);drawTokens();sbx_drawSkybox(gl,skyboxViewMatrix(traveler),pMatrix);gl.useProgram(shaderProgram);if(animation.requestId==0)drawSectors();gl.finish()}function drawTokens(){var i;for(i=0;i<tokenPositions.length;i++){if(!tokenPositions[i].collected){gl.uniform3f(shaderProgram.vMov,tokenPositions[i][0],tokenPositions[i][1],tokenPositions[i][2]);drawGraph(token)}}gl.uniform3f(shaderProgram.vMov,0,0,0)}function drawGraph(graph,modelViewGL,monoProjectionGL){gl.useProgram(shaderProgram);gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);gl.enableVertexAttribArray(shaderProgram.vertexColorAttribute);if(graph.nrOfTriangles>0){gl.bindBuffer(gl.ARRAY_BUFFER,graph.trianglesVerticesBuffer);gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,vertexPositionSize,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,graph.trianglesColorsBuffer);gl.vertexAttribPointer(shaderProgram.vertexColorAttribute,vertexColorSize,gl.FLOAT,false,0,0);gl.drawArrays(gl.TRIANGLES,0,3*graph.nrOfTriangles)}if(graph.nrOfLines>0){gl.bindBuffer(gl.ARRAY_BUFFER,graph.linesVerticesBuffer);gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,vertexPositionSize,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,graph.linesColorsBuffer);gl.vertexAttribPointer(shaderProgram.vertexColorAttribute,vertexColorSize,gl.FLOAT,false,0,0);gl.drawArrays(gl.LINES,0,2*graph.nrOfLines)}gl.disableVertexAttribArray(shaderProgram.vertexPositionAttribute);gl.disableVertexAttribArray(shaderProgram.vertexColorAttribute);if(graph.texture){mki3d_texture.redraw(gl,mvMatrix,pMatrix,graph,shadeFactor,(function(gl,vs,fs){return compileAndLinkShader(fs,vs)}))}}function startTravel(){sbx_renderRandomCube(gl);drawScene();showMessage("<div style='font-size:20px;'> Touch/click the screen sectors to navigate !</div>");setCallbacks()}var webGLStart=async function(){{let url="assets/mki3d/index.json";let response=await fetch(url,{cache:"no-cache",mode:"cors"});let result=await response.json();console.log(result);arrayOfStages=result.stages;arrayOfTokens=result.tokens;console.log(arrayOfStages)}canvas=document.getElementById("canvasId");canvasTex=document.getElementById("canvasTexId");canvasTexDiv=document.getElementById("canvasTexDiv");initGL(canvas);initShaders();sectors=makeGraph(mki3d.sectors);initBuffers(sectors);buffersScene={};buffersToken={};buffersLinkSymbol={};buffersFrameBox={};declareBuffers(buffersScene);declareBuffers(buffersToken);declareBuffers(buffersLinkSymbol);declareBuffers(buffersFrameBox);gl.clearColor(bgColor[0],bgColor[1],bgColor[2],1);gl.enable(gl.DEPTH_TEST);setViewportProjections();startGame()};async function startGame(){clearCallbacks();{let i=Math.floor(Math.random()*arrayOfTokens.length);let url="assets/mki3d/tokens/"+arrayOfTokens[i];mki3d.token=await mki3d.url.load(url,mki3d.token)}if(stageIndex==0){randomShuffle(arrayOfStages);console.log(arrayOfStages)}let url="assets/mki3d/stages/"+arrayOfStages[stageIndex];showMessage("<div style='font-size:20px;'>LOADING NEXT STAGE ...</div>");mki3d.data=await mki3d.url.load(url,mki3d.data);stageIndex=(stageIndex+1)%arrayOfStages.length;loadedStage=makeStage(mki3d.data,mki3d.token,mki3d.url.symbol);restoreStage(loadedStage);generateTokenPositions();sbx_makeShaderProgram(gl);startTravel()}window.onload=webGLStart;function insertNewStage(){var idx=stageArray.length;stageArray[idx]={};stageArray[idx].bgColor=bgColor;stageArray[idx].scene=scene;stageArray[idx].traveler=traveler;stageArray[idx].linkSymbol=linkSymbol;frameBox=makeFrameBox(traveler);stageArray[idx].frameBox=frameBox}function makeFrameBox(traveler){var v000=[traveler.vMin[0]-XMargin,traveler.vMin[1]-YMargin,traveler.vMin[2]-ZMargin];var v001=[traveler.vMin[0]-XMargin,traveler.vMin[1]-YMargin,traveler.vMax[2]+ZMargin];var v010=[traveler.vMin[0]-XMargin,traveler.vMax[1]+YMargin,traveler.vMin[2]-ZMargin];var v011=[traveler.vMin[0]-XMargin,traveler.vMax[1]+YMargin,traveler.vMax[2]+ZMargin];var v100=[traveler.vMax[0]+XMargin,traveler.vMin[1]-YMargin,traveler.vMin[2]-ZMargin];var v101=[traveler.vMax[0]+XMargin,traveler.vMin[1]-YMargin,traveler.vMax[2]+ZMargin];var v110=[traveler.vMax[0]+XMargin,traveler.vMax[1]+YMargin,traveler.vMin[2]-ZMargin];var v111=[traveler.vMax[0]+XMargin,traveler.vMax[1]+YMargin,traveler.vMax[2]+ZMargin];var frameBox={};frameBox.nrOfLines=12;frameBox.linesVertices=new Float32Array([v000[0],v000[1],v000[2],v001[0],v001[1],v001[2],v010[0],v010[1],v000[2],v011[0],v011[1],v011[2],v100[0],v100[1],v100[2],v101[0],v101[1],v101[2],v110[0],v110[1],v110[2],v111[0],v111[1],v111[2],v000[0],v000[1],v000[2],v010[0],v010[1],v010[2],v001[0],v001[1],v001[2],v011[0],v011[1],v011[2],v100[0],v100[1],v100[2],v110[0],v110[1],v110[2],v101[0],v101[1],v101[2],v111[0],v111[1],v111[2],v000[0],v000[1],v000[2],v100[0],v100[1],v100[2],v001[0],v001[1],v001[2],v101[0],v101[1],v101[2],v010[0],v010[1],v010[2],v110[0],v110[1],v110[2],v011[0],v011[1],v011[2],v111[0],v111[1],v111[2]]);frameBox.linesColors=new Float32Array([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]);frameBox.nrOfTriangles=0;frameBox.trianglesVertices=new Float32Array([]);frameBox.trianglesColors=new Float32Array([]);return frameBox}function restoreStage(stage){bgColor=stage.bgColor;scene=stage.scene;traveler=stage.traveler;token=stage.token;linkSymbol=stage.linkSymbol;frameBox=stage.frameBox;loadBuffers(scene,buffersScene);loadBuffers(token,buffersToken);loadBuffers(linkSymbol,buffersLinkSymbol);loadBuffers(frameBox,buffersFrameBox)}function randomShuffle(t){let n=t.length;if(n<=1){return}let swap=function(i,j){let tmp=t[i];t[i]=t[j];t[j]=tmp};for(let i=0;i<n;i++){let j=i+Math.floor(Math.random()*(n-i));swap(i,j)}}var tokenpositions=[];function generateTokenPositions(){var i;for(i=0;i<MAX_TOKENS;i++){tokenPositions[i]=[traveler.vMin[0]+Math.random()*(traveler.vMax[0]-traveler.vMin[0]),traveler.vMin[1]+Math.random()*(traveler.vMax[1]-traveler.vMin[1]),traveler.vMin[2]+Math.random()*(traveler.vMax[2]-traveler.vMin[2])];tokenPositions[i].collected=false}tokenPositions.remaining=MAX_TOKENS}function checkTokens(){var i;var vTraveler=[traveler.x,traveler.y,traveler.z];let collectedAlert=false;for(i=0;i<tokenPositions.length;i++){if(!tokenPositions[i].collected&&maxDistance(vTraveler,tokenPositions[i])<1){animation.stop();tokenPositions[i].collected=true;tokenPositions.remaining--;collectedAlert=true;showMessage("<span style='font-size:40px;'>"+tokenPositions.remaining+"</span>");sbx_renderRandomCube(gl)}}if(collectedAlert)sbx_renderRandomCube(gl);if(tokenPositions.remaining===0){cancelCallbacks();startGame()}}function rotateXZ(traveler,angle){traveler.rotXZ=(traveler.rotXZ+angle+360)%360}function rotateYZ(traveler,angle){traveler.rotYZ+=angle;if(angle>0&&traveler.rotYZ>maxYZAngle){animation.stop();traveler.rotYZ=maxYZAngle}if(angle<0&&traveler.rotYZ<-maxYZAngle){animation.stop();traveler.rotYZ=-maxYZAngle}}function move(traveler,vector){var v=worldRotatedVector(traveler,vector);traveler.x=Math.max(traveler.vMin[0]-XMargin,Math.min(traveler.vMax[0]+XMargin,traveler.x+v[0]));traveler.y=Math.max(traveler.vMin[1]-YMargin,Math.min(traveler.vMax[1]+YMargin,traveler.y+v[1]));traveler.z=Math.max(traveler.vMin[2]-ZMargin,Math.min(traveler.vMax[2]+ZMargin,traveler.z+v[2]));checkTokens()}
